# FastAPI E-Commerce Tutorial - Environment Variables Template
# ===========================================================
# Copy this file to .env and update the values according to your setup
# Never commit .env file to version control - it contains sensitive information

# Application Configuration
# ========================
# The name of your application (used in logs, documentation, etc.)
APP_NAME=FastAPI E-Commerce API

# Environment: development, staging, production
# This affects logging levels, debug modes, and other environment-specific settings
ENVIRONMENT=development

# Debug mode - set to False in production
# When True, provides detailed error messages and auto-reload functionality
DEBUG=True

# API Version - used for API versioning and documentation
API_VERSION=1.0.0

# Server Configuration
# ===================
# Host address to bind the server (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
HOST=127.0.0.1

# Port number for the server to listen on
PORT=8000

# Database Configuration
# =====================
# PostgreSQL database connection settings
DB_HOST=localhost
DB_PORT=5432
DB_NAME=fastapi_ecommerce
DB_USER=fastapi_user
DB_PASSWORD=your_secure_password_here

# Alternative: Database URL (uncomment if you prefer to use a single connection string)
# DATABASE_URL=postgresql://fastapi_user:your_secure_password_here@localhost:5432/fastapi_ecommerce

# Security Configuration
# ======================
# Secret key for JWT token generation and other cryptographic operations
# Generate a secure random string for production use
# You can generate one using: openssl rand -hex 32
SECRET_KEY=your_super_secure_secret_key_here_change_this_in_production

# Algorithm for JWT token encoding/decoding
ALGORITHM=HS256

# JWT token expiration time (in minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Password hashing configuration
# Number of rounds for bcrypt hashing (higher = more secure but slower)
BCRYPT_ROUNDS=12

# CORS Configuration
# =================
# Allowed origins for CORS (Cross-Origin Resource Sharing)
# Use "*" for development, specify exact origins for production
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000

# Allowed HTTP methods
ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Allowed headers
ALLOWED_HEADERS=*

# File Upload Configuration
# ========================
# Maximum file size for uploads (in bytes)
# 5MB = 5 * 1024 * 1024 = 5242880 bytes
MAX_FILE_SIZE=5242880

# Allowed file extensions for uploads (comma-separated)
ALLOWED_FILE_EXTENSIONS=jpg,jpeg,png,gif,webp

# Upload directory path (relative to project root)
UPLOAD_DIR=uploads

# Email Configuration (for notifications, password reset, etc.)
# ===========================================================
# SMTP server settings
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password

# From email address for outgoing emails
FROM_EMAIL=noreply@fastapi-ecommerce.com

# Logging Configuration
# ====================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path (leave empty to log to console only)
LOG_FILE=logs/app.log

# Payment Gateway Configuration (for future implementation)
# ========================================================
# Example: Stripe configuration
# STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
# STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key

# Example: PayPal configuration
# PAYPAL_CLIENT_ID=your_paypal_client_id
# PAYPAL_CLIENT_SECRET=your_paypal_client_secret
# PAYPAL_MODE=sandbox  # sandbox or live

# External API Keys (for future integrations)
# ===========================================
# Example: Google Maps API (for address validation, shipping calculations)
# GOOGLE_MAPS_API_KEY=your_google_maps_api_key

# Example: SendGrid API (alternative email service)
# SENDGRID_API_KEY=your_sendgrid_api_key

# Redis Configuration (for caching, sessions - optional advanced feature)
# ======================================================================
# REDIS_URL=redis://localhost:6379/0

# Testing Configuration
# =====================
# Test database settings (separate from main database)
TEST_DB_HOST=localhost
TEST_DB_PORT=5432
TEST_DB_NAME=fastapi_ecommerce_test
TEST_DB_USER=fastapi_user
TEST_DB_PASSWORD=your_secure_password_here

# Monitoring and Analytics (for production)
# =========================================
# Example: Sentry for error tracking
# SENTRY_DSN=your_sentry_dsn_here

# Example: Google Analytics
# GOOGLE_ANALYTICS_ID=UA-XXXXXXX-X

# Rate Limiting Configuration
# ==========================
# Maximum requests per minute per IP
RATE_LIMIT_PER_MINUTE=60

# Maximum requests per hour per authenticated user
RATE_LIMIT_PER_HOUR_USER=1000

# Performance Configuration
# ========================
# Database connection pool size
DB_POOL_SIZE=20

# Maximum overflow connections
DB_MAX_OVERFLOW=0

# Connection pool timeout (seconds)
DB_POOL_TIMEOUT=30

# Notes:
# ------
# 1. Always change default passwords and secret keys in production
# 2. Use environment-specific values for different deployment environments
# 3. Consider using a secrets management service for production deployments
# 4. Regularly rotate secrets and access keys
# 5. Never commit the actual .env file to version control